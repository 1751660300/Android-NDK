1.[BX]
    a.[BX]是什么呢？
        和[0]有些类似，[0]表示内存单元，他的偏移地址是0；
    b.我梦要完整地描述一个内存单元，需要两种信息：
        1.内存单元地址；
        2.内存单元长度（类型）；
    c.[BX]同样也表示一个内存单元，他的偏移地址在bx中，比如：mov ax,[bx];
2.loop指令
    a.这个指令和循环有关
    b.描述性符号“（）”
        1.ax中的内容为 0010H ，可以这样来描述 (ax)=0010H;
        2.2000:1000处的内容为0010H，就可以这样来描述 (21000H)=0010H;
        3.对于 mov ax,[2]的功能，可以这样描述 (ax)=((ds)*16+2);
        4.对于 mov [2],ax的功能，可以这样描述 （(ds)*16+2）=(ax);
        5.add ax,2的功能 可以这样描述 (ax)=(ax)+2;
        ...
        其他指令也是一样
    c.约定符号idata表示常量
        在debug中写过类似的指令：mov ax,[0]，0表式常量，以后就用idata代替
    d.指令的格式是：loop标号（标号相当于地址），cpu执行loop指令的时候，要进行两步操作：
        1.(cx) = (cx) - 1；
        2.判断cx中的值，不为零则转至表好处执行程序，如果为零则向下执行；
    e.注意
        cx存放循环次数；
        cx赋值最好在loop指令前设置；
        在汇编程序中，数据不能以字母开头，所以要在前面加0；
    f.程序跟踪，可以使用debug的G或P令命
        g 偏移地址 ；可以直接跳过循环等等
        p 可以直接跳过循环等等
3.在debug中跟踪用loop指令实现的循环程序
4.debug和汇编编译器masm对指令的不同处理
    在masm编译器中 mov ax,[1] 就相当于debug中 mov ax,1，并不会和debug中一样读取偏移地址中的数据；
    要想实现和debug中相同的功能，这就要借助BX寄存器： mov bx,1    mov ax,[bx]或者 加上段地址：mov ax,ds:[1];
5. loop和[BX]的联合应用
    可以使用bx来设置偏移地址
    s: mov ax,[bx]
    inc bx
    loop s
6.段前缀
    就是bs，也可以是其他的寄存器，
7.一段安全的空间
    a.我们需要直接向一段内存中写入内容，这段内存空间不应该存放系统或其他的程序数据或代码，否者写入操作很可能
        引发错误。在dos方式下一般情况，0:200~0:2ff空间没有系统或其他数据，以后就可以直接向这段安全空间写代码；

8.段前缀的使用
    （ds）= 0002
    （es）= 0003
    可以切换到别的段